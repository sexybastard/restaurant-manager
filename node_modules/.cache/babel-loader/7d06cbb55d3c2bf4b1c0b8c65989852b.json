{"ast":null,"code":"import _classCallCheck from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Learning Materials\\\\glints-test-app\\\\src\\\\RestaurantList.js\";\nimport React, { Component } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport TimeInput from 'react-time-input';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar firebase = require(\"firebase\"); // Required for side-effects\n\n\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB9G_v0FY2aFN3VzG9J10TI_wtSc-hEFBg\",\n  authDomain: \"interview-test-ec9c0.firebaseapp.com\",\n  databaseURL: \"https://interview-test-ec9c0.firebaseio.com\",\n  projectId: \"interview-test-ec9c0\",\n  storageBucket: \"interview-test-ec9c0.appspot.com\",\n  messagingSenderId: \"493975126354\"\n}); // Initialize Cloud Firestore through Firebase\n\nvar db = firebase.firestore(); // Disable deprecated features\n\ndb.settings({\n  timestampsInSnapshots: true\n});\n\nvar RestaurantList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RestaurantList, _Component);\n\n  function RestaurantList(props) {\n    var _this;\n\n    _classCallCheck(this, RestaurantList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RestaurantList).call(this, props));\n\n    _this.getData = function () {\n      // restaurantRef.where(\"capital\", \"==\", true)\n      var restaurantRef = db.collection('restaurants');\n      restaurantRef.get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n        });\n      }).catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    };\n\n    _this.handleChange = function (date) {\n      _this.setState({\n        startDate: date\n      }, function () {\n        alert('asshole');\n        console.log(date.getDay());\n        console.log(date.getHours());\n        console.log(date.getMinutes());\n\n        _this.getData();\n      });\n    };\n\n    _this.onTimeChangeHandler = function (time) {\n      console.log(time);\n    };\n\n    _this.state = {\n      startDate: new Date()\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RestaurantList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(TimeInput, {\n        initTime: \"11:12\",\n        ref: \"TimeInputWrapper\",\n        className: \"form-control\",\n        mountFocus: \"true\",\n        onTimeChange: this.onTimeChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RestaurantList;\n}(Component);\n\nexport default RestaurantList;","map":{"version":3,"sources":["D:\\Learning Materials\\glints-test-app\\src\\RestaurantList.js"],"names":["React","Component","DatePicker","TimeInput","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","settings","timestampsInSnapshots","RestaurantList","props","getData","restaurantRef","collection","get","then","querySnapshot","forEach","doc","console","log","id","data","catch","error","handleChange","date","setState","startDate","alert","getDay","getHours","getMinutes","onTimeChangeHandler","time","state","Date","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport TimeInput from 'react-time-input';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst firebase = require(\"firebase\");\r\n// Required for side-effects\r\nrequire(\"firebase/firestore\");\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyB9G_v0FY2aFN3VzG9J10TI_wtSc-hEFBg\",\r\n  authDomain: \"interview-test-ec9c0.firebaseapp.com\",\r\n  databaseURL: \"https://interview-test-ec9c0.firebaseio.com\",\r\n  projectId: \"interview-test-ec9c0\",\r\n  storageBucket: \"interview-test-ec9c0.appspot.com\",\r\n  messagingSenderId: \"493975126354\"\r\n});\r\n\r\n// Initialize Cloud Firestore through Firebase\r\nvar db = firebase.firestore();\r\n\r\n// Disable deprecated features\r\ndb.settings({\r\n  timestampsInSnapshots: true\r\n});\r\n\r\nclass RestaurantList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      startDate: new Date()\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  getData = () => {\r\n    // restaurantRef.where(\"capital\", \"==\", true)\r\n    var restaurantRef = db.collection('restaurants');\r\n    restaurantRef.get().then(function(querySnapshot) {\r\n        querySnapshot.forEach(function(doc) {\r\n            // doc.data() is never undefined for query doc snapshots\r\n            console.log(doc.id, \" => \", doc.data());\r\n        });\r\n    })\r\n    .catch(function(error) {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n  };\r\n\r\n  handleChange = (date) => {\r\n    this.setState({\r\n      startDate: date\r\n    }, () => {\r\n      alert('asshole')\r\n      console.log(date.getDay())\r\n      console.log(date.getHours())\r\n      console.log(date.getMinutes())\r\n      this.getData();\r\n    });\r\n  };\r\n\r\n  onTimeChangeHandler = (time) => {\r\n    console.log(time)\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <DatePicker\r\n          selected={this.state.startDate}\r\n          onChange={this.handleChange} />\r\n        <TimeInput\r\n          initTime='11:12'\r\n          ref=\"TimeInputWrapper\"\r\n          className='form-control'\r\n          mountFocus='true'\r\n          onTimeChange={this.onTimeChangeHandler} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestaurantList;"]},"metadata":{},"sourceType":"module"}