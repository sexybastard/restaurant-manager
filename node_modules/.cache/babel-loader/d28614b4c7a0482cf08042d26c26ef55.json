{"ast":null,"code":"import _defineProperty from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Learning Materials\\\\glints-test-app\\\\src\\\\Home.js\";\nimport React, { Component } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport TimeInput from 'react-time-input';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport RestaurantList from './RestaurantList';\nimport FavoriteList from './FavoriteList';\n\nvar _ = require('lodash');\n\nvar dayLibs = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.getRestaurants = function () {\n      var db = _this.props.db;\n      var restaurantRef = db.collection('restaurants');\n      restaurantRef.get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          // this.setState({ restaurantList: [...this.state.restaurantList, doc.data()]})\n          _this.setState({\n            restaurantList: _objectSpread({}, _this.state.restaurantList, _defineProperty({}, doc.id, doc.data()))\n          });\n        });\n      }).catch(function (error) {\n        console.log(\"Error getting restaurants: \", error);\n      });\n    };\n\n    _this.getFavorites = function () {\n      var _this$props = _this.props,\n          db = _this$props.db,\n          user = _this$props.user;\n      var favoriteRef = db.collection('favorites');\n      var favoriteList = [];\n      favoriteRef.get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          if (doc.data().owner === user || doc.data().collaborator.includes(user)) {\n            favoriteList.push(doc.data());\n          }\n        });\n\n        _this.setState({\n          favoriteList: favoriteList\n        });\n      }).catch(function (error) {\n        console.log(\"Error getting favorites: \", error);\n      });\n    };\n\n    _this.onDateChange = function (selectedDate) {\n      console.log(selectedDate.getDay());\n\n      _this.setState({\n        selectedDate: selectedDate\n      }, function () {\n        _this.inquiryRestaurant();\n      });\n\n      console.log(_this.state.restaurantList);\n    };\n\n    _this.onTimeChange = function (selectedTime) {\n      _this.setState({\n        selectedTime: selectedTime\n      }, function () {\n        _this.inquiryRestaurant();\n      });\n    };\n\n    _this.inquiryRestaurant = function () {\n      var selectedDay = dayLibs[_this.state.selectedDate.getDay()];\n\n      var filteredRestaurantList = _.filter(_this.state.restaurantList, function (x) {\n        console.log(selectedDay);\n\n        if (x.schedules[selectedDay]) {\n          var isOvernight = x.schedules[selectedDay].hourStart > x.schedules[selectedDay].hourEnd ? true : false;\n\n          if (isOvernight) {\n            return x.schedules[selectedDay].hourStart <= _this.state.selectedTime || x.schedules[selectedDay].hourEnd >= _this.state.selectedTime;\n          } else {\n            return x.schedules[selectedDay].hourStart <= _this.state.selectedTime && x.schedules[selectedDay].hourEnd >= _this.state.selectedTime;\n          }\n        } else {\n          return false;\n        }\n      });\n\n      _this.setState({\n        filteredRestaurantList: filteredRestaurantList\n      });\n    };\n\n    _this.gotoInquiry = function () {\n      _this.setState({\n        tab: 'INQUIRY'\n      });\n    };\n\n    _this.gotoFavorite = function () {\n      _this.setState({\n        tab: 'FAVORITE'\n      });\n    };\n\n    _this.handleRemove = function (item, favoriteKey, favorite) {\n      var db = _this.props.db;\n\n      var newList = _.filter(favorite.restaurants, function (x) {\n        return item.id !== x.id;\n      });\n\n      var favoriteRef = db.collection('favorites');\n      favoriteRef.doc(favoriteKey).update({\n        restaurants: newList\n      }).then(function (resp) {\n        _this.getFavorites();\n      });\n    };\n\n    _this.handleEdit = function (key, editTo) {\n      var db = _this.props.db;\n      var favoriteRef = db.collection('favorites');\n      favoriteRef.doc(key).update({\n        name: editTo\n      }).then(function (resp) {\n        _this.getFavorites();\n      });\n    };\n\n    _this.state = {\n      selectedDate: new Date(),\n      selectedTime: '00:00',\n      restaurantList: {},\n      favoriteList: [],\n      filteredRestaurantList: {}\n    };\n\n    _this.getRestaurants();\n\n    _this.getFavorites();\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          db = _this$props2.db,\n          user = _this$props2.user;\n      var renderInquiry = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Input date: \"), React.createElement(DatePicker, {\n        selected: this.state.selectedDate,\n        onChange: this.onDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Input time: \"), React.createElement(TimeInput, {\n        initTime: this.state.selectedTime,\n        ref: \"TimeInputWrapper\",\n        className: \"form-control\",\n        mountFocus: \"true\",\n        onTimeChange: this.onTimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(RestaurantList, {\n        data: this.state.filteredRestaurantList,\n        db: db,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })));\n      var renderFavorite = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.state.favoriteList ? React.createElement(FavoriteList, {\n        data: this.state.favoriteList,\n        db: db,\n        user: user,\n        handleRemove: this.handleRemove,\n        handleEdit: this.handleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }) : null);\n\n      var renderContent = function renderContent() {\n        var content;\n\n        switch (_this2.state.tab) {\n          case 'INQUIRY':\n            content = renderInquiry;\n            break;\n\n          case 'FAVORITE':\n            content = renderFavorite;\n            break;\n\n          default:\n            content = renderInquiry;\n        }\n\n        return content;\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.gotoInquiry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"INQUIRY\"), React.createElement(\"button\", {\n        onClick: this.gotoFavorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"FAVORITE\")), renderContent());\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["D:\\Learning Materials\\glints-test-app\\src\\Home.js"],"names":["React","Component","DatePicker","TimeInput","RestaurantList","FavoriteList","_","require","dayLibs","Home","props","getRestaurants","db","restaurantRef","collection","get","then","querySnapshot","forEach","doc","setState","restaurantList","state","id","data","catch","error","console","log","getFavorites","user","favoriteRef","favoriteList","owner","collaborator","includes","push","onDateChange","selectedDate","getDay","inquiryRestaurant","onTimeChange","selectedTime","selectedDay","filteredRestaurantList","filter","x","schedules","isOvernight","hourStart","hourEnd","gotoInquiry","tab","gotoFavorite","handleRemove","item","favoriteKey","favorite","newList","restaurants","update","resp","handleEdit","key","editTo","name","Date","renderInquiry","renderFavorite","renderContent","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport TimeInput from 'react-time-input';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport RestaurantList from './RestaurantList';\r\nimport FavoriteList from './FavoriteList';\r\n\r\nvar _ = require('lodash');\r\nconst dayLibs = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      selectedDate: new Date(),\r\n      selectedTime: '00:00',\r\n      restaurantList: {},\r\n      favoriteList: [],\r\n      filteredRestaurantList: {}\r\n    };\r\n\r\n    this.getRestaurants();\r\n    this.getFavorites();\r\n  }\r\n\r\n  getRestaurants = () => {\r\n    const {db} = this.props;\r\n    let restaurantRef = db.collection('restaurants');\r\n    restaurantRef.get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        // this.setState({ restaurantList: [...this.state.restaurantList, doc.data()]})\r\n        this.setState({ \r\n          restaurantList: {\r\n            ...this.state.restaurantList,\r\n            [doc.id]: doc.data()\r\n          }\r\n        });\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Error getting restaurants: \", error);\r\n    });\r\n  };\r\n\r\n  getFavorites = () => {\r\n    const {db, user} = this.props;\r\n    let favoriteRef = db.collection('favorites');\r\n    let favoriteList = [];\r\n\r\n    favoriteRef.get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        if(doc.data().owner === user || doc.data().collaborator.includes(user)){\r\n          favoriteList.push(doc.data())\r\n        }\r\n      });\r\n      this.setState({favoriteList})\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Error getting favorites: \", error);\r\n    });\r\n  };\r\n\r\n  onDateChange = (selectedDate) => {\r\n    console.log(selectedDate.getDay())\r\n    this.setState({selectedDate}, () => {\r\n      this.inquiryRestaurant();\r\n    });\r\n    console.log(this.state.restaurantList)\r\n  };\r\n\r\n  onTimeChange = (selectedTime) => {\r\n    this.setState({selectedTime}, () => {\r\n      this.inquiryRestaurant();\r\n    })\r\n  };\r\n\r\n  inquiryRestaurant = () => {\r\n    let selectedDay = dayLibs[this.state.selectedDate.getDay()];\r\n    let filteredRestaurantList = _.filter(this.state.restaurantList, (x) => {\r\n      console.log(selectedDay)\r\n      if(x.schedules[selectedDay]){\r\n        let isOvernight = x.schedules[selectedDay].hourStart > x.schedules[selectedDay].hourEnd ? true : false;\r\n        \r\n        if(isOvernight){\r\n          return (x.schedules[selectedDay].hourStart <= this.state.selectedTime || x.schedules[selectedDay].hourEnd >= this.state.selectedTime)\r\n        }\r\n        else{\r\n          return (x.schedules[selectedDay].hourStart <= this.state.selectedTime && x.schedules[selectedDay].hourEnd >= this.state.selectedTime)\r\n        }\r\n      }\r\n      else{\r\n        return false\r\n      }\r\n    });\r\n    this.setState({ filteredRestaurantList })\r\n  };\r\n\r\n  gotoInquiry = () => {\r\n    this.setState({tab: 'INQUIRY'})\r\n  };\r\n\r\n  gotoFavorite = () => {\r\n    this.setState({tab: 'FAVORITE'})\r\n  };\r\n\r\n  handleRemove = (item, favoriteKey, favorite) => {\r\n    const {db} = this.props;\r\n    let newList = _.filter(favorite.restaurants, (x) => {\r\n      return item.id !== x.id\r\n    });\r\n    let favoriteRef = db.collection('favorites');\r\n    favoriteRef.doc(favoriteKey).update({restaurants: newList}).then(resp => {\r\n      this.getFavorites();\r\n    });\r\n  };\r\n\r\n  handleEdit = (key, editTo) => {\r\n    const {db} = this.props;\r\n    let favoriteRef = db.collection('favorites');\r\n    favoriteRef.doc(key).update({name: editTo}).then(resp => {\r\n      this.getFavorites();\r\n    });\r\n  };\r\n \r\n  render() {\r\n    const {db, user} = this.props;\r\n\r\n    const renderInquiry = (\r\n      <div>\r\n        <div>\r\n          <label>Input date: </label>\r\n          <DatePicker\r\n            selected={this.state.selectedDate}\r\n            onChange={this.onDateChange} />\r\n          <label>Input time: </label>\r\n          <TimeInput\r\n            initTime={this.state.selectedTime}\r\n            ref=\"TimeInputWrapper\"\r\n            className='form-control'\r\n            mountFocus='true'\r\n            onTimeChange={this.onTimeChange} />\r\n        </div>\r\n        <div>\r\n          <RestaurantList data={this.state.filteredRestaurantList} db={db} user={user} />\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    const renderFavorite = (\r\n      <div>\r\n        {\r\n          this.state.favoriteList ? <FavoriteList data={this.state.favoriteList} db={db} user={user} handleRemove={this.handleRemove} handleEdit={this.handleEdit} /> : null\r\n        }\r\n      </div>\r\n    )\r\n\r\n    const renderContent = () => {\r\n      let content;\r\n      switch(this.state.tab){\r\n        case 'INQUIRY':\r\n          content = renderInquiry\r\n          break;\r\n        case 'FAVORITE':\r\n          content = renderFavorite\r\n          break;\r\n        default:\r\n          content = renderInquiry\r\n      }\r\n\r\n      return content;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <button onClick={this.gotoInquiry}>INQUIRY</button>\r\n          <button onClick={this.gotoFavorite}>FAVORITE</button>\r\n        </div>\r\n        {renderContent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}