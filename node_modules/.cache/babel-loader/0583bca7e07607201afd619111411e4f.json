{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Learning Materials\\\\glints-test-app\\\\src\\\\AddFavorite.js\";\nimport React, { Component } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar AddFavorite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFavorite, _Component);\n\n  function AddFavorite(props) {\n    var _this;\n\n    _classCallCheck(this, AddFavorite);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFavorite).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        favoriteAs: event.target.value\n      });\n    };\n\n    _this.addToFavorite = function () {\n      var _this$props = _this.props,\n          db = _this$props.db,\n          restaurant = _this$props.restaurant;\n      var restaurantRef = db.collection('favorites');\n      restaurantRef.where('name', '==', _this.state.favoriteAs).get().then(function (snapshot) {\n        if (snapshot.empty) {\n          var newItem = {\n            name: _this.state.favoriteAs,\n            owner: _this.props.user,\n            collaborator: [],\n            restaurants: _toConsumableArray(restaurant)\n          };\n          restaurantRef.add(newItem).then(function (ref) {\n            restaurantRef.doc(ref.id).update({\n              id: ref.id\n            });\n          });\n          return;\n        } // snapshot.forEach(doc => {\n        //   console.log(doc.id, '=>', doc.data());\n        // });\n\n      }).catch(function (err) {\n        console.log('Error getting documents', err);\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(AddFavorite, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          flex: 1\n        },\n        onClick: this.addToFavorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"add to favorite\")), React.createElement(\"div\", {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddFavorite;\n}(Component);\n\nexport default AddFavorite;","map":{"version":3,"sources":["D:\\Learning Materials\\glints-test-app\\src\\AddFavorite.js"],"names":["React","Component","AddFavorite","props","handleChange","event","setState","favoriteAs","target","value","addToFavorite","db","restaurant","restaurantRef","collection","where","state","get","then","snapshot","empty","newItem","name","owner","user","collaborator","restaurants","add","ref","doc","id","update","catch","err","console","log","display","flex","flexDirection"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,4CAAP;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UAOnBC,YAPmB,GAOJ,UAACC,KAAD,EAAW;AACxB,YAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA1B,OAAd;AACD,KATkB;;AAAA,UAWnBC,aAXmB,GAWH,YAAM;AAAA,wBACK,MAAKP,KADV;AAAA,UACbQ,EADa,eACbA,EADa;AAAA,UACTC,UADS,eACTA,UADS;AAGpB,UAAIC,aAAa,GAAGF,EAAE,CAACG,UAAH,CAAc,WAAd,CAApB;AACAD,MAAAA,aAAa,CAACE,KAAd,CAAoB,MAApB,EAA4B,IAA5B,EAAkC,MAAKC,KAAL,CAAWT,UAA7C,EAAyDU,GAAzD,GACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AAChB,YAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB,cAAIC,OAAO,GAAG;AACZC,YAAAA,IAAI,EAAE,MAAKN,KAAL,CAAWT,UADL;AAEZgB,YAAAA,KAAK,EAAE,MAAKpB,KAAL,CAAWqB,IAFN;AAGZC,YAAAA,YAAY,EAAE,EAHF;AAIZC,YAAAA,WAAW,qBAAMd,UAAN;AAJC,WAAd;AAMAC,UAAAA,aAAa,CAACc,GAAd,CAAkBN,OAAlB,EAA2BH,IAA3B,CAAgC,UAAAU,GAAG,EAAI;AACrCf,YAAAA,aAAa,CAACgB,GAAd,CAAkBD,GAAG,CAACE,EAAtB,EAA0BC,MAA1B,CAAiC;AAACD,cAAAA,EAAE,EAAEF,GAAG,CAACE;AAAT,aAAjC;AACD,WAFD;AAGA;AACD,SAZe,CAchB;AACA;AACA;;AACD,OAlBD,EAmBCE,KAnBD,CAmBO,UAAAC,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,GAAvC;AACD,OArBD;AAsBD,KArCkB;;AAGjB,UAAKjB,KAAL,GAAa,EAAb;AAHiB;AAKlB;;;;6BAkCQ;AACP,aACE;AAAK,QAAA,KAAK,EAAE;AAACoB,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,IAAI,EAAE,CAAxB;AAA2BC,UAAAA,aAAa,EAAE;AAA1C,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAACD,UAAAA,IAAI,EAAE;AAAP,SAAZ;AAAuB,QAAA,OAAO,EAAE,KAAK3B,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,EAIE;AAAK,QAAA,KAAK,EAAE;AAAC2B,UAAAA,IAAI,EAAE;AAAP,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKjC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAUD;;;;EAnDuBH,S;;AAsD1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass AddFavorite extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({favoriteAs: event.target.value})\r\n  };\r\n\r\n  addToFavorite = () => {\r\n    const {db, restaurant} = this.props;\r\n\r\n    let restaurantRef = db.collection('favorites');\r\n    restaurantRef.where('name', '==', this.state.favoriteAs).get()\r\n    .then(snapshot => {\r\n      if (snapshot.empty) {\r\n        let newItem = {\r\n          name: this.state.favoriteAs,\r\n          owner: this.props.user,\r\n          collaborator: [],\r\n          restaurants: [...restaurant]\r\n        };\r\n        restaurantRef.add(newItem).then(ref => {\r\n          restaurantRef.doc(ref.id).update({id: ref.id});\r\n        })\r\n        return;\r\n      }  \r\n\r\n      // snapshot.forEach(doc => {\r\n      //   console.log(doc.id, '=>', doc.data());\r\n      // });\r\n    })\r\n    .catch(err => {\r\n      console.log('Error getting documents', err);\r\n    });\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <div style={{display: 'flex', flex: 1, flexDirection: 'row'}}>\r\n        <div style={{flex: 1}} onClick={this.addToFavorite}>\r\n          <label>add to favorite</label>\r\n        </div>\r\n        <div style={{flex: 1}}>\r\n          <input type=\"text\" onChange={this.handleChange}></input>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFavorite;"]},"metadata":{},"sourceType":"module"}