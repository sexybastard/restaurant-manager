{"ast":null,"code":"import _classCallCheck from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Learning Materials\\\\glints-test-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport HomeContainer from './HomeContainer.js';\nimport Login from './Login.js';\n\nvar firebase = require(\"firebase\"); // Required for side-effects\n\n\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB9G_v0FY2aFN3VzG9J10TI_wtSc-hEFBg\",\n  authDomain: \"interview-test-ec9c0.firebaseapp.com\",\n  databaseURL: \"https://interview-test-ec9c0.firebaseio.com\",\n  projectId: \"interview-test-ec9c0\",\n  storageBucket: \"interview-test-ec9c0.appspot.com\",\n  messagingSenderId: \"493975126354\"\n}); // Initialize Cloud Firestore through Firebase\n\nvar db = firebase.firestore(); // Disable deprecated features\n\ndb.settings({\n  timestampsInSnapshots: true\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleLogin = function (email) {\n      _this.setState({\n        email: email\n      });\n\n      var userRef = db.collection('users').doc(email);\n      userRef.get().then(function (resp) {\n        if (!resp.exists) {\n          userRef.set({\n            email: email\n          }).then(function (ref) {\n            _this.setState({\n              loggedIn: true\n            }, function () {\n              return alert('New user has been created: ' + email);\n            });\n\n            _this.props.setLoggedinUser(email);\n          });\n        } else {\n          _this.setState({\n            loggedIn: true\n          }, function () {\n            return alert('Logged in as: ' + email);\n          });\n\n          _this.props.setLoggedinUser(email);\n        }\n      }).catch(function (err) {\n        alert('Connection error! unable to access firebase');\n        console.log('Error getting document', err);\n      });\n    };\n\n    _this.state = {\n      loggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var email = this.state.email;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.loggedIn ? email ? React.createElement(HomeContainer, {\n        db: db,\n        user: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }) : null : React.createElement(Login, {\n        db: db,\n        handleLogin: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\Learning Materials\\glints-test-app\\src\\App.js"],"names":["React","Component","HomeContainer","Login","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","settings","timestampsInSnapshots","App","props","handleLogin","email","setState","userRef","collection","doc","get","then","resp","exists","set","ref","loggedIn","alert","setLoggedinUser","catch","err","console","log","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CACA;;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AAEAD,QAAQ,CAACE,aAAT,CAAuB;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,sCAFS;AAGrBC,EAAAA,WAAW,EAAE,6CAHQ;AAIrBC,EAAAA,SAAS,EAAE,sBAJU;AAKrBC,EAAAA,aAAa,EAAE,kCALM;AAMrBC,EAAAA,iBAAiB,EAAE;AANE,CAAvB,E,CASA;;AACA,IAAIC,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAT,C,CAEA;;AACAD,EAAE,CAACE,QAAH,CAAY;AACVC,EAAAA,qBAAqB,EAAE;AADb,CAAZ;;IAIMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAQnBC,WARmB,GAQL,UAACC,KAAD,EAAW;AACvB,YAAKC,QAAL,CAAc;AAACD,QAAAA,KAAK,EAALA;AAAD,OAAd;;AACA,UAAIE,OAAO,GAAGT,EAAE,CAACU,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BJ,KAA3B,CAAd;AACAE,MAAAA,OAAO,CAACG,GAAR,GAAcC,IAAd,CAAmB,UAAAC,IAAI,EAAI;AACzB,YAAG,CAACA,IAAI,CAACC,MAAT,EAAgB;AACdN,UAAAA,OAAO,CAACO,GAAR,CAAY;AAACT,YAAAA,KAAK,EAALA;AAAD,WAAZ,EAAqBM,IAArB,CAA0B,UAAAI,GAAG,EAAI;AAC/B,kBAAKT,QAAL,CAAc;AAACU,cAAAA,QAAQ,EAAE;AAAX,aAAd,EAAgC;AAAA,qBAAMC,KAAK,CAAC,gCAAgCZ,KAAjC,CAAX;AAAA,aAAhC;;AACA,kBAAKF,KAAL,CAAWe,eAAX,CAA2Bb,KAA3B;AACD,WAHD;AAID,SALD,MAMI;AACF,gBAAKC,QAAL,CAAc;AAACU,YAAAA,QAAQ,EAAE;AAAX,WAAd,EAAgC;AAAA,mBAAMC,KAAK,CAAC,mBAAmBZ,KAApB,CAAX;AAAA,WAAhC;;AACA,gBAAKF,KAAL,CAAWe,eAAX,CAA2Bb,KAA3B;AACD;AACF,OAXD,EAWGc,KAXH,CAWS,UAAAC,GAAG,EAAI;AACdH,QAAAA,KAAK,CAAC,6CAAD,CAAL;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,GAAtC;AACD,OAdD;AAeD,KA1BkB;;AAGjB,UAAKG,KAAL,GAAa;AACXP,MAAAA,QAAQ,EAAE;AADC,KAAb;AAHiB;AAMlB;;;;6BAsBQ;AAAA,UACAX,KADA,GACS,KAAKkB,KADd,CACAlB,KADA;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKkB,KAAL,CAAWP,QAAX,GAAuBX,KAAK,GAAG,oBAAC,aAAD;AAAe,QAAA,EAAE,EAAEP,EAAnB;AAAuB,QAAA,IAAI,EAAEO,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAA4C,IAAxE,GAAgF,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAEP,EAAX;AAAe,QAAA,WAAW,EAAE,KAAKM,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFpF,CADF;AAOD;;;;EAtCelB,S;;AAyClB,eAAegB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport HomeContainer from './HomeContainer.js';\nimport Login from './Login.js';\nconst firebase = require(\"firebase\");\n// Required for side-effects\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB9G_v0FY2aFN3VzG9J10TI_wtSc-hEFBg\",\n  authDomain: \"interview-test-ec9c0.firebaseapp.com\",\n  databaseURL: \"https://interview-test-ec9c0.firebaseio.com\",\n  projectId: \"interview-test-ec9c0\",\n  storageBucket: \"interview-test-ec9c0.appspot.com\",\n  messagingSenderId: \"493975126354\"\n});\n\n// Initialize Cloud Firestore through Firebase\nvar db = firebase.firestore();\n\n// Disable deprecated features\ndb.settings({\n  timestampsInSnapshots: true\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      loggedIn: false\n    };\n  }\n\n  handleLogin = (email) => {\n    this.setState({email})\n    let userRef = db.collection('users').doc(email);\n    userRef.get().then(resp => {\n      if(!resp.exists){\n        userRef.set({email}).then(ref => {\n          this.setState({loggedIn: true}, () => alert('New user has been created: ' + email))\n          this.props.setLoggedinUser(email);\n        });\n      }\n      else{\n        this.setState({loggedIn: true}, () => alert('Logged in as: ' + email))\n        this.props.setLoggedinUser(email);\n      }\n    }).catch(err => {\n      alert('Connection error! unable to access firebase')\n      console.log('Error getting document', err);\n    });\n  }\n\n  render() {\n    const {email} = this.state;\n    return (\n      <div className=\"App\">\n        {\n          this.state.loggedIn ? (email ? <HomeContainer db={db} user={email} /> : null) : <Login db={db} handleLogin={this.handleLogin} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}