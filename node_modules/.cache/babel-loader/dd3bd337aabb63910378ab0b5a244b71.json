{"ast":null,"code":"import _defineProperty from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Learning Materials\\\\glints-test-app\\\\src\\\\Home.js\";\nimport React, { Component } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport TimeInput from 'react-time-input';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport RestaurantList from './RestaurantList';\n\nvar _ = require('lodash');\n\nvar dayLibs = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.getData = function () {\n      // restaurantRef.where(\"capital\", \"==\", true)\n      var restaurantRef = db.collection('restaurants');\n      restaurantRef.get().then(function (querySnapshot) {\n        // this.setState({ restaurantList: querySnapshot }, () => {\n        //   console.log(this.state.restaurantList)\n        // });\n        querySnapshot.forEach(function (doc) {\n          // this.setState({ restaurantList: [...this.state.restaurantList, doc.data()]})\n          _this.setState({\n            restaurantList: _objectSpread({}, _this.state.restaurantList, _defineProperty({}, doc.id, doc.data()))\n          });\n        });\n      }).catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    };\n\n    _this.onDateChange = function (selectedDate) {\n      console.log(selectedDate.getDay());\n\n      _this.setState({\n        selectedDate: selectedDate\n      }, function () {\n        _this.inquiryRestaurant();\n      });\n\n      console.log(_this.state.restaurantList);\n    };\n\n    _this.onTimeChange = function (selectedTime) {\n      _this.setState({\n        selectedTime: selectedTime\n      }, function () {\n        _this.inquiryRestaurant();\n      });\n    };\n\n    _this.inquiryRestaurant = function () {\n      var selectedDay = dayLibs[_this.state.selectedDate.getDay()]; // let filteredRestaurantList = _.filter(this.state.restaurantList, (x, id) => {\n\n\n      var filteredRestaurantList = _.filter(_this.state.restaurantList, function (x) {\n        console.log(selectedDay);\n\n        if (x.schedules[selectedDay]) {\n          console.log('name: ', x.name);\n          console.log('time: ', _this.state.selectedTime);\n          console.log('schedule: ', x.schedules);\n          console.log('condL ', x.schedules[selectedDay].hourStart <= _this.state.selectedTime && x.schedules[selectedDay].hourEnd >= _this.state.selectedTime);\n          var isOvernight = x.schedules[selectedDay].hourStart > x.schedules[selectedDay].hourEnd ? true : false;\n          console.log('isOvernight:', isOvernight);\n\n          if (isOvernight) {\n            return x.schedules[selectedDay].hourStart <= _this.state.selectedTime || x.schedules[selectedDay].hourEnd >= _this.state.selectedTime;\n          } else {\n            return x.schedules[selectedDay].hourStart <= _this.state.selectedTime && x.schedules[selectedDay].hourEnd >= _this.state.selectedTime;\n          }\n        } else {\n          return false;\n        }\n      });\n\n      console.log(filteredRestaurantList);\n\n      _this.setState({\n        filteredRestaurantList: filteredRestaurantList\n      });\n    };\n\n    _this.state = {\n      selectedDate: new Date(),\n      selectedTime: '00:00',\n      restaurantList: {},\n      filteredRestaurantList: {}\n    };\n\n    _this.getData();\n\n    return _this;\n  } // getData = () => {\n  //   // restaurantRef.where(\"capital\", \"==\", true)\n  //   var restaurantRef = db.collection('restaurants');\n  //   restaurantRef.get().then((querySnapshot) => {\n  //     querySnapshot.forEach((doc) => {\n  //       // console.log(doc.id, \" => \", doc.data());\n  //     });\n  //   })\n  //   .catch((error) => {\n  //     console.log(\"Error getting documents: \", error);\n  //   });\n  // };\n\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: this.state.selectedDate,\n        onChange: this.onDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(TimeInput, {\n        initTime: this.state.selectedTime,\n        ref: \"TimeInputWrapper\",\n        className: \"form-control\",\n        mountFocus: \"true\",\n        onTimeChange: this.onTimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(RestaurantList, {\n        data: this.state.filteredRestaurantList,\n        db: db,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["D:\\Learning Materials\\glints-test-app\\src\\Home.js"],"names":["React","Component","DatePicker","TimeInput","RestaurantList","_","require","dayLibs","Home","props","getData","restaurantRef","db","collection","get","then","querySnapshot","forEach","doc","setState","restaurantList","state","id","data","catch","error","console","log","onDateChange","selectedDate","getDay","inquiryRestaurant","onTimeChange","selectedTime","selectedDay","filteredRestaurantList","filter","x","schedules","name","hourStart","hourEnd","isOvernight","Date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport TimeInput from 'react-time-input';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport RestaurantList from './RestaurantList';\r\n\r\nvar _ = require('lodash');\r\nconst dayLibs = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      selectedDate: new Date(),\r\n      selectedTime: '00:00',\r\n      restaurantList: {},\r\n      filteredRestaurantList: {}\r\n    };\r\n\r\n    this.getData();\r\n  }\r\n\r\n  // getData = () => {\r\n  //   // restaurantRef.where(\"capital\", \"==\", true)\r\n  //   var restaurantRef = db.collection('restaurants');\r\n  //   restaurantRef.get().then((querySnapshot) => {\r\n  //     querySnapshot.forEach((doc) => {\r\n  //       // console.log(doc.id, \" => \", doc.data());\r\n  //     });\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.log(\"Error getting documents: \", error);\r\n  //   });\r\n  // };\r\n\r\n  getData = () => {\r\n    // restaurantRef.where(\"capital\", \"==\", true)\r\n    var restaurantRef = db.collection('restaurants');\r\n    restaurantRef.get().then((querySnapshot) => {\r\n      // this.setState({ restaurantList: querySnapshot }, () => {\r\n      //   console.log(this.state.restaurantList)\r\n      // });\r\n      querySnapshot.forEach((doc) => {\r\n        // this.setState({ restaurantList: [...this.state.restaurantList, doc.data()]})\r\n        this.setState({ \r\n          restaurantList: {\r\n            ...this.state.restaurantList,\r\n            [doc.id]: doc.data()\r\n          }\r\n        });\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Error getting documents: \", error);\r\n    });\r\n  };\r\n\r\n  onDateChange = (selectedDate) => {\r\n    console.log(selectedDate.getDay())\r\n    this.setState({selectedDate}, () => {\r\n      this.inquiryRestaurant();\r\n    });\r\n    console.log(this.state.restaurantList)\r\n  };\r\n\r\n  onTimeChange = (selectedTime) => {\r\n    this.setState({selectedTime}, () => {\r\n      this.inquiryRestaurant();\r\n    })\r\n  };\r\n\r\n  inquiryRestaurant = () => {\r\n    let selectedDay = dayLibs[this.state.selectedDate.getDay()];\r\n    // let filteredRestaurantList = _.filter(this.state.restaurantList, (x, id) => {\r\n      let filteredRestaurantList = _.filter(this.state.restaurantList, (x) => {\r\n      console.log(selectedDay)\r\n      if(x.schedules[selectedDay]){\r\n        console.log('name: ', x.name)\r\n        console.log('time: ', this.state.selectedTime)\r\n        console.log('schedule: ', x.schedules)\r\n        console.log('condL ', x.schedules[selectedDay].hourStart <= this.state.selectedTime && x.schedules[selectedDay].hourEnd >= this.state.selectedTime)\r\n        let isOvernight = x.schedules[selectedDay].hourStart > x.schedules[selectedDay].hourEnd ? true : false;\r\n        console.log('isOvernight:', isOvernight)\r\n        if(isOvernight){\r\n          return (x.schedules[selectedDay].hourStart <= this.state.selectedTime || x.schedules[selectedDay].hourEnd >= this.state.selectedTime)\r\n        }\r\n        else{\r\n          return (x.schedules[selectedDay].hourStart <= this.state.selectedTime && x.schedules[selectedDay].hourEnd >= this.state.selectedTime)\r\n        }\r\n      }\r\n      else{\r\n        return false\r\n      }\r\n    });\r\n    console.log(filteredRestaurantList)\r\n    this.setState({ filteredRestaurantList })\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n        <DatePicker\r\n          selected={this.state.selectedDate}\r\n          onChange={this.onDateChange} />\r\n        <TimeInput\r\n          initTime={this.state.selectedTime}\r\n          ref=\"TimeInputWrapper\"\r\n          className='form-control'\r\n          mountFocus='true'\r\n          onTimeChange={this.onTimeChange} />\r\n        </div>\r\n        <div>\r\n          <RestaurantList data={this.state.filteredRestaurantList} db={db} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}