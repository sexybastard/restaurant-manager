{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning Materials\\\\glints-test-app\\\\src\\\\FavoriteList.js\";\nimport React from 'react';\n\nvar FavoriteList = function FavoriteList(_ref) {\n  var data = _ref.data,\n      db = _ref.db;\n\n  var renderRestaurant = function renderRestaurant(data, key) {\n    return React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, data.name));\n  };\n\n  var renderRestaurantList = function renderRestaurantList(ids) {\n    var restaurantRef = db.collection('restaurants');\n    var restaurantList = [];\n    console.log(ids);\n    ids.forEach(function (item) {\n      restaurantRef.doc(item).get().then(function (doc) {\n        if (!doc.exists) {\n          console.log('Restaurant not found');\n        } else {\n          // return doc.data();\n          // restaurantList.push(doc.data());\n          // restaurantList = [...restaurantList, doc.data()]\n          // console.log(restaurantList);\n          return renderRestaurant(doc.data(), doc.id);\n        }\n      }).catch(function (err) {\n        console.log('Error getting restaurants', err);\n      });\n    }); // let restaurantList = ids.map(item => {\n    //   return restaurantRef.doc(item).get()\n    //   .then(doc => {\n    //     if (!doc.exists) {\n    //       console.log('Restaurant not found');\n    //       return null;\n    //     } else {\n    //       return doc.data();\n    //     }\n    //   })\n    //   .catch(err => {\n    //     console.log('Error getting restaurants', err);\n    //     return null;\n    //   });\n    // })\n    // return null;\n    // return (\n    //   <div>\n    //   {\n    //     restaurantList ? \n    //     restaurantList.map((item, key) => {\n    //       return renderRestaurant(item, key)\n    //     }) : null\n    //   }\n    //   </div>\n    // );\n  };\n\n  var renderFavorite = function renderFavorite(item, key) {\n    return React.createElement(\"div\", {\n      key: key,\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        border: '1px solid black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, item.name), renderRestaurantList(item.restaurants)));\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      border: '2px solid black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, data.length > 0 ? data.map(function (item, key) {\n    return renderFavorite(item, key);\n  }) : React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"No favorite\"));\n};\n\nexport default FavoriteList;","map":{"version":3,"sources":["D:\\Learning Materials\\glints-test-app\\src\\FavoriteList.js"],"names":["React","FavoriteList","data","db","renderRestaurant","key","name","renderRestaurantList","ids","restaurantRef","collection","restaurantList","console","log","forEach","item","doc","get","then","exists","id","catch","err","renderFavorite","display","justifyContent","border","flex","restaurants","length","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAdC,IAAc,QAAdA,IAAc;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AACnC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,IAAD,EAAOG,GAAP,EAAe;AACtC,WAAO;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQH,IAAI,CAACI,IAAb,CADK,CAAP;AAGD,GAJD;;AAMA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,GAAD,EAAS;AACpC,QAAIC,aAAa,GAAGN,EAAE,CAACO,UAAH,CAAc,aAAd,CAApB;AACA,QAAIC,cAAc,GAAG,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAA,IAAAA,GAAG,CAACM,OAAJ,CAAY,UAASC,IAAT,EAAc;AACxBN,MAAAA,aAAa,CAACO,GAAd,CAAkBD,IAAlB,EAAwBE,GAAxB,GACCC,IADD,CACM,UAAAF,GAAG,EAAI;AACX,YAAI,CAACA,GAAG,CAACG,MAAT,EAAiB;AACfP,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,SAFD,MAEO;AACL;AACA;AACA;AACA;AACA,iBAAOT,gBAAgB,CAACY,GAAG,CAACd,IAAJ,EAAD,EAAac,GAAG,CAACI,EAAjB,CAAvB;AACD;AACF,OAXD,EAYCC,KAZD,CAYO,UAAAC,GAAG,EAAI;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCS,GAAzC;AACD,OAdD;AAeD,KAhBD,EAJoC,CAqBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAhDD;;AAkDA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACR,IAAD,EAAOV,GAAP,EAAe;AACpC,WACE;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAe,MAAA,KAAK,EAAE;AAACmB,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,cAAc,EAAE,YAAlC;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQZ,IAAI,CAACT,IAAb,CADF,EAEGC,oBAAoB,CAACQ,IAAI,CAACa,WAAN,CAFvB,CADF,CADF;AAQD,GATD;;AAWA,SACE;AAAK,IAAA,KAAK,EAAE;AAACF,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIxB,IAAI,CAAC2B,MAAL,GAAc,CAAd,GACA3B,IAAI,CAAC4B,GAAL,CAAS,UAACf,IAAD,EAAOV,GAAP;AAAA,WAAekB,cAAc,CAACR,IAAD,EAAOV,GAAP,CAA7B;AAAA,GAAT,CADA,GAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CADF;AASD,CA7ED;;AA+EA,eAAeJ,YAAf","sourcesContent":["import React from 'react'\r\n\r\nconst FavoriteList = ({data, db}) => {\r\n  const renderRestaurant = (data, key) => {\r\n    return <div key={key}>\r\n      <label>{data.name}</label>\r\n    </div>\r\n  }\r\n\r\n  const renderRestaurantList = (ids) => {\r\n    let restaurantRef = db.collection('restaurants');\r\n    let restaurantList = [];\r\n    console.log(ids);\r\n    ids.forEach(function(item){\r\n      restaurantRef.doc(item).get()\r\n      .then(doc => {\r\n        if (!doc.exists) {\r\n          console.log('Restaurant not found');\r\n        } else {\r\n          // return doc.data();\r\n          // restaurantList.push(doc.data());\r\n          // restaurantList = [...restaurantList, doc.data()]\r\n          // console.log(restaurantList);\r\n          return renderRestaurant(doc.data(), doc.id);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('Error getting restaurants', err);\r\n      });\r\n    })\r\n    // let restaurantList = ids.map(item => {\r\n    //   return restaurantRef.doc(item).get()\r\n    //   .then(doc => {\r\n    //     if (!doc.exists) {\r\n    //       console.log('Restaurant not found');\r\n    //       return null;\r\n    //     } else {\r\n    //       return doc.data();\r\n    //     }\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log('Error getting restaurants', err);\r\n    //     return null;\r\n    //   });\r\n    // })\r\n   \r\n    // return null;\r\n    // return (\r\n    //   <div>\r\n    //   {\r\n    //     restaurantList ? \r\n    //     restaurantList.map((item, key) => {\r\n    //       return renderRestaurant(item, key)\r\n    //     }) : null\r\n    //   }\r\n    //   </div>\r\n    // );\r\n  }\r\n\r\n  const renderFavorite = (item, key) => {\r\n    return (\r\n      <div key={key} style={{display: 'flex', justifyContent: 'flex-start', border: '1px solid black'}}>\r\n        <div style={{flex: 1}}>\r\n          <label>{item.name}</label>\r\n          {renderRestaurantList(item.restaurants)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={{border: '2px solid black'}}>\r\n      {\r\n        data.length > 0 ?\r\n        data.map((item, key) => renderFavorite(item, key)) :\r\n        <label>No favorite</label>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoriteList;"]},"metadata":{},"sourceType":"module"}