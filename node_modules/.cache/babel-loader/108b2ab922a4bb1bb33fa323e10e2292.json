{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Learning Materials\\\\glints-test-app\\\\src\\\\AddFavorite.js\";\nimport React, { Component } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\nvar AddFavorite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFavorite, _Component);\n\n  function AddFavorite(props) {\n    var _this;\n\n    _classCallCheck(this, AddFavorite);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFavorite).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        favoriteAs: event.target.value\n      });\n    };\n\n    _this.updateRealtime = function () {\n      var realtimeDb = _this.props.realtimeDb;\n      var currTime = new Date();\n      realtimeDb.ref(\"detectedProcess\").set(currTime.valueOf()).then(function (resp) {\n        return console.log(resp);\n      });\n    };\n\n    _this.addToFavorite = function () {\n      var _this$props = _this.props,\n          db = _this$props.db,\n          restaurant = _this$props.restaurant,\n          user = _this$props.user;\n      var favoriteAs = _this.state.favoriteAs;\n\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var restaurantRef = db.collection('favorites');\n      restaurantRef.where('name', '==', favoriteAs).get().then(function (snapshot) {\n        if (snapshot.empty) {\n          var newItem = {\n            name: favoriteAs,\n            owner: user,\n            collaborator: [],\n            restaurants: [restaurant]\n          };\n          restaurantRef.add(newItem).then(function (ref) {\n            restaurantRef.doc(ref.id).update({\n              id: ref.id\n            }).then(function (resp) {\n              that.updateRealtime();\n              alert('Added to ' + favoriteAs);\n            });\n          });\n          return;\n        }\n\n        snapshot.forEach(function (doc) {\n          console.log(doc.id, '=>', doc.data());\n\n          if (!doc.data().restaurants.includes(restaurant.id)) {\n            var updatedData = {\n              restaurants: _toConsumableArray(doc.data().restaurants).concat([restaurant])\n            };\n            restaurantRef.doc(doc.id).update(updatedData).then(function (resp) {\n              that.updateRealtime();\n              alert('Added to ' + favoriteAs);\n            });\n          }\n        });\n      }).catch(function (err) {\n        console.log('Error getting documents', err);\n      });\n\n      _this.toggleButton(false);\n    };\n\n    _this.toggleButton = function (bool) {\n      _this.setState({\n        toggleButton: bool\n      });\n    };\n\n    _this.state = {\n      toggleButton: false\n    };\n    return _this;\n  }\n\n  _createClass(AddFavorite, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var toggleButton = this.state.toggleButton;\n      return toggleButton ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addToFavorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Ok\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.toggleButton(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Cancel\")) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.toggleButton(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Add To Collection\"));\n    }\n  }]);\n\n  return AddFavorite;\n}(Component);\n\nexport default AddFavorite;","map":{"version":3,"sources":["D:\\Learning Materials\\glints-test-app\\src\\AddFavorite.js"],"names":["React","Component","AddFavorite","props","handleChange","event","setState","favoriteAs","target","value","updateRealtime","realtimeDb","currTime","Date","ref","set","valueOf","then","resp","console","log","addToFavorite","db","restaurant","user","state","that","restaurantRef","collection","where","get","snapshot","empty","newItem","name","owner","collaborator","restaurants","add","doc","id","update","alert","forEach","data","includes","updatedData","catch","err","toggleButton","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './App.css';\r\n\r\nclass AddFavorite extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      toggleButton: false\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({favoriteAs: event.target.value})\r\n  };\r\n\r\n  updateRealtime = () => {\r\n    const {realtimeDb} = this.props;\r\n    let currTime = new Date();\r\n    realtimeDb.ref(\"detectedProcess\").set(currTime.valueOf()).then(resp => console.log(resp))\r\n  };\r\n\r\n  addToFavorite = () => {\r\n    const {db, restaurant, user} = this.props;\r\n    const {favoriteAs} = this.state;\r\n    const that = this;\r\n\r\n    let restaurantRef = db.collection('favorites');\r\n    restaurantRef.where('name', '==', favoriteAs).get()\r\n    .then(snapshot => {\r\n      if (snapshot.empty) {\r\n        let newItem = {\r\n          name: favoriteAs,\r\n          owner: user,\r\n          collaborator: [],\r\n          restaurants: [restaurant]\r\n        };\r\n        restaurantRef.add(newItem).then(ref => {\r\n          restaurantRef.doc(ref.id).update({id: ref.id}).then(resp => {\r\n            that.updateRealtime();\r\n            alert('Added to ' + favoriteAs)\r\n          });\r\n        })\r\n        return;\r\n      }  \r\n\r\n      snapshot.forEach(doc => {\r\n        console.log(doc.id, '=>', doc.data());\r\n        if(!doc.data().restaurants.includes(restaurant.id)){\r\n          let updatedData = {\r\n            restaurants: [...doc.data().restaurants, restaurant]\r\n          }\r\n          restaurantRef.doc(doc.id).update(updatedData).then(resp => {\r\n            that.updateRealtime();\r\n            alert('Added to ' + favoriteAs)\r\n          });\r\n        }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log('Error getting documents', err);\r\n    });\r\n    this.toggleButton(false)\r\n  };\r\n\r\n  toggleButton = (bool) => {\r\n    this.setState({toggleButton: bool})\r\n  };\r\n \r\n  render() {\r\n    const {toggleButton} = this.state;\r\n\r\n    return (\r\n      toggleButton ?\r\n      <React.Fragment>\r\n        <input type=\"text\" onChange={this.handleChange}></input>\r\n        <button onClick={this.addToFavorite}>Ok</button>\r\n        <button onClick={() => this.toggleButton(false)}>Cancel</button>\r\n      </React.Fragment> :\r\n      <React.Fragment>\r\n        <button onClick={() => this.toggleButton(true)}>Add To Collection</button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFavorite;"]},"metadata":{},"sourceType":"module"}