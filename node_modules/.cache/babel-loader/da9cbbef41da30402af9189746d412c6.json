{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Learning Materials\\\\glints-test-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Learning Materials\\\\glints-test-app\\\\src\\\\AddFavorite.js\";\nimport React, { Component } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar AddFavorite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFavorite, _Component);\n\n  function AddFavorite(props) {\n    var _this;\n\n    _classCallCheck(this, AddFavorite);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFavorite).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        favoriteAs: event.target.value\n      });\n    };\n\n    _this.addToFavorite = function () {\n      var _this$props = _this.props,\n          db = _this$props.db,\n          restaurant = _this$props.restaurant,\n          user = _this$props.user;\n      var favoriteAs = _this.state.favoriteAs;\n      var restaurantRef = db.collection('favorites');\n      restaurantRef.where('name', '==', favoriteAs).get().then(function (snapshot) {\n        if (snapshot.empty) {\n          var newItem = {\n            name: favoriteAs,\n            owner: user,\n            collaborator: [],\n            restaurants: [restaurant]\n          };\n          restaurantRef.add(newItem).then(function (ref) {\n            restaurantRef.doc(ref.id).update({\n              id: ref.id\n            }).then(function (resp) {\n              return alert('Added to ' + favoriteAs);\n            });\n          });\n          return;\n        }\n\n        snapshot.forEach(function (doc) {\n          console.log(doc.id, '=>', doc.data());\n\n          if (!doc.data().restaurants.includes(restaurant.id)) {\n            var updatedData = {\n              restaurants: _toConsumableArray(doc.data().restaurants).concat([restaurant])\n            };\n            restaurantRef.doc(doc.id).update(updatedData).then(function (resp) {\n              return alert('Added to ' + favoriteAs);\n            });\n          }\n        });\n      }).catch(function (err) {\n        console.log('Error getting documents', err);\n      });\n    };\n\n    _this.toggleButton = function (bool) {\n      _this.setState({\n        toggleButton: bool\n      });\n    };\n\n    _this.state = {\n      toggleButton: false\n    };\n    return _this;\n  }\n\n  _createClass(AddFavorite, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var toggleButton = this.state.toggleButton;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, toggleButton ? React.createElement(\"div\", {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addToFavorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Ok\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.toggleButton(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Cancel\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.toggleButton(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Add To Collection\")));\n    }\n  }]);\n\n  return AddFavorite;\n}(Component);\n\nexport default AddFavorite;","map":{"version":3,"sources":["D:\\Learning Materials\\glints-test-app\\src\\AddFavorite.js"],"names":["React","Component","AddFavorite","props","handleChange","event","setState","favoriteAs","target","value","addToFavorite","db","restaurant","user","state","restaurantRef","collection","where","get","then","snapshot","empty","newItem","name","owner","collaborator","restaurants","add","ref","doc","id","update","resp","alert","forEach","console","log","data","includes","updatedData","catch","err","toggleButton","bool","flex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass AddFavorite extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      toggleButton: false\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({favoriteAs: event.target.value})\r\n  };\r\n\r\n  addToFavorite = () => {\r\n    const {db, restaurant, user} = this.props;\r\n    const {favoriteAs} = this.state;\r\n\r\n    let restaurantRef = db.collection('favorites');\r\n    restaurantRef.where('name', '==', favoriteAs).get()\r\n    .then(snapshot => {\r\n      if (snapshot.empty) {\r\n        let newItem = {\r\n          name: favoriteAs,\r\n          owner: user,\r\n          collaborator: [],\r\n          restaurants: [restaurant]\r\n        };\r\n        restaurantRef.add(newItem).then(ref => {\r\n          restaurantRef.doc(ref.id).update({id: ref.id}).then(resp => alert('Added to ' + favoriteAs));\r\n        })\r\n        return;\r\n      }  \r\n\r\n      snapshot.forEach(doc => {\r\n        console.log(doc.id, '=>', doc.data());\r\n        if(!doc.data().restaurants.includes(restaurant.id)){\r\n          let updatedData = {\r\n            restaurants: [...doc.data().restaurants, restaurant]\r\n          }\r\n          restaurantRef.doc(doc.id).update(updatedData).then(resp => alert('Added to ' + favoriteAs));\r\n        }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log('Error getting documents', err);\r\n    });\r\n  };\r\n\r\n  toggleButton = (bool) => {\r\n    this.setState({toggleButton: bool})\r\n  };\r\n \r\n  render() {\r\n    const {toggleButton} = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          toggleButton ?\r\n          <div style={{flex: 1}}>\r\n            <input type=\"text\" onChange={this.handleChange}></input>\r\n            <button onClick={this.addToFavorite}>Ok</button>\r\n            <button onClick={() => this.toggleButton(false)}>Cancel</button>\r\n          </div> :\r\n          <div>\r\n            <button onClick={() => this.toggleButton(true)}>Add To Collection</button>\r\n          </div>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFavorite;"]},"metadata":{},"sourceType":"module"}